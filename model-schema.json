{
  "id": "https://themost.io/schemas/2015/1/model-schema.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "@id": {
      "type": "string",
      "description":"A string which represents a literal unique identifier for this model e.g. https://example.com/models/User"
    },
    "name": {
      "type": "string",
      "description":"A string which represents the name of this model e.g. Order, Customer, Person etc"
    },
    "id": {
      "type": "number",
      "description":"An optional numeric identifier for this model e.g. 9587891"
    },
    "title": {
      "type": "string",
      "description":"A string which represents the title of this e.g. Supplier Orders, Person Followers etc"
    },
    "inherits": {
      "type": "string",
      "description":"A string which represents the model which is inherited by this model e.g. User inherits Account, Person inherits Party etc"
    },
    "sealed": {
      "default": false,
      "type": "boolean",
      "description": "A boolean which indicates whether this model is being upgraded automatically or not. The default value is false."
    },
    "abstract": {
      "default": false,
      "type": "boolean",
      "description": "A boolean which indicates whether this model is an abstract model or not. The default value is false."
    },
    "source": {
      "type": "string",
      "description": "A string which holds the database object of this model. If this property is missing the database object's name is the concatenation of the model's name and the keyword 'Base' e.g. UserBase, PersonBase etc"
    },
    "view": {
      "type": "string",
      "description": "A string which holds the database object that is going to be used for fetching data. If this property is missing this database object's name is the concatenation of the model's name and the keyword 'Data' e.g. UserData, PersonData etc"
    },
    "version": {
      "default":"1.0",
      "type": "string",
      "pattern":"^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
      "description": "A string which represents the version of the model's schema. This version is going to be used in model upgrade operations e.g. 1.0, 0.1.2 etc"
    },
    "caching":{
      "default": "none",
      "type":"string",
      "enum": ["none", "always", "conditional"],
      "description":"A boolean which indicates whether model data will be cached or not. The default value is none -no caching-. A conditional caching allows developers to control caching mechanism while fetching data."
    },
    "fields": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "nullable": {
            "type": "boolean"
          },
          "primary": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "many": {
            "type": "boolean"
          },
          "expandable": {
            "type": "boolean"
          },
          "mapping": {
            "type": "object",
            "properties": {
              "associationType": {
                "type": "string",
                "enum": ["association", "junction" ]
              },
              "associationAdapter": {
                "type": "string"
              },
              "parentModel": {
                "type": "string"
              },
              "parentField": {
                "type": "string"
              },
              "childModel": {
                "type": "string"
              },
              "childField": {
                "type": "string"
              },
              "cascade": {
                "type": "string",
                "enum": ["delete", "none"]
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "privileges": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "mask": {
            "default":15,
            "type": "number",
            "description":"A number which represents permission mask (1=Read,2=Create,4=Update,8=Delete,16=Execute)",
            "enum":[1,2,4,8,15,16]
          },
          "type": {
            "type": "string",
            "enum":["self","global","parent","item"],
            "description": "A string which represents the permission scope."
          },
          "account": {
            "type": "string",
            "description": "A string which represents the name of the security group where this privilege will be applied e.g. Administrators, Sales etc."
          },
          "filter": {
            "type": "string",
            "description": "A string which represents a filter expression for this privilege. This attribute is used for self privileges which are commonly derived from user's attributes e.g. 'owner eq me()' or 'orderStatus eq 1 and customer eq me()' etc."
          }
        },
        "required": [
          "mask",
          "type"
        ]
      }
    }
  },
  "required": [
    "name", "title", "version"
  ]
}
